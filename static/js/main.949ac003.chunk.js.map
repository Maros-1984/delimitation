{"version":3,"sources":["hooks/useWindowDimensions.js","components/Area/Area.js","components/Loader/Loader.js","components/VerticalMove/VerticalMove.js","components/HorizontalMove/HorizontalMove.js","components/InbetweenDot/InbetweenDot.js","components/Game/Game.js","hooks/useCreateNewGame.js","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","Area","gameWidth","color","areaX","areaY","setHighlightedMove","areaWidth","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","areaStyle","paddingBottom","onMouseMove","e","x","nativeEvent","offsetX","y","offsetY","console","log","bottom","right","className","toLowerCase","style","Loader","VerticalMove","cellIndex","rowIndex","possibleMoves","highlightedMove","verticalBorderStyle","isHighlighted","find","pm","isPossibleRightMove","HorizontalMove","horizontalBorderStyle","isPossibleBottomMove","InbetweenDot","borderWidth","dotStyle","Game","gameState","setGame","fetch","backendUrl","method","body","headers","then","response","json","data","useCreateNewGame","areas","length","map","row","cell","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.949ac003.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\r\n\r\nconst getWindowDimensions = () => {\r\n    const {innerWidth: width, innerHeight: height} = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n};\r\n\r\nexport const useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import {useWindowDimensions} from \"../../hooks/useWindowDimensions\";\r\n\r\nexport const Area = ({gameWidth, color, areaX, areaY, setHighlightedMove}) => {\r\n    const {width} = useWindowDimensions()\r\n    const areaWidth = .9 / gameWidth * width;\r\n\r\n    const areaStyle = {\r\n        paddingBottom: areaWidth + \"px\",\r\n        width: areaWidth + \"px\",\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        let x = e.nativeEvent.offsetX;\r\n        let y = e.nativeEvent.offsetY;\r\n\r\n        if (x > y) {\r\n            if (areaWidth - x > y) {\r\n                // Highlight upper border.\r\n                console.log('up')\r\n                setHighlightedMove({areaX, areaY: areaY - 1, bottom: true})\r\n            } else {\r\n                // Highlight right border.\r\n                console.log('right')\r\n                setHighlightedMove({areaX, areaY, right: true})\r\n            }\r\n        } else {\r\n            if (areaWidth - x > y) {\r\n                // Highlight left border.\r\n                console.log('left')\r\n                setHighlightedMove({areaX: areaX - 1, areaY, right: true})\r\n            } else {\r\n                // Highlight bottom border.\r\n                console.log('bottom')\r\n                setHighlightedMove({areaX, areaY, bottom: true})\r\n            }\r\n        }\r\n    };\r\n\r\n    return <td onMouseMove={handleMouseMove} className={color.toLowerCase()} style={areaStyle}/>;\r\n};","import './Loader.css';\r\n\r\nexport const Loader = () => <div className=\"loader\"/>;","export const VerticalMove = ({cellIndex, gameWidth, rowIndex, possibleMoves, highlightedMove}) => {\r\n    const areaWidth = 90 / gameWidth + '%';\r\n    const borderWidth = 10 / (gameWidth + 1) + '%';\r\n\r\n    const verticalBorderStyle = {\r\n        paddingBottom: areaWidth,\r\n        width: borderWidth,\r\n    }\r\n\r\n    const isPossibleRightMove = (rowIndex, cellIndex) => possibleMoves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.right);\r\n    const isHighlighted = highlightedMove?.areaX === cellIndex && highlightedMove?.areaY === rowIndex && highlightedMove?.right\r\n\r\n    return <>\r\n        {cellIndex !== gameWidth - 1 &&\r\n        <td style={verticalBorderStyle}\r\n            className={isPossibleRightMove(rowIndex, cellIndex) ? isHighlighted ? 'highlightedBorder' : 'possibleMove border' : 'border'}/>}\r\n    </>;\r\n};","export const HorizontalMove = ({rowIndex, cellIndex, gameWidth, possibleMoves, highlightedMove}) => {\r\n    const areaWidth = 90 / gameWidth + '%';\r\n    const borderWidth = 10 / (gameWidth + 1) + '%';\r\n\r\n    const horizontalBorderStyle = {\r\n        paddingBottom: borderWidth,\r\n        width: areaWidth,\r\n    }\r\n\r\n    const isPossibleBottomMove = (rowIndex, cellIndex) => possibleMoves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.bottom);\r\n    const isHighlighted = highlightedMove?.areaX === cellIndex && highlightedMove?.areaY === rowIndex && highlightedMove?.bottom\r\n\r\n    return <td style={horizontalBorderStyle}\r\n               className={isPossibleBottomMove(rowIndex, cellIndex) ? isHighlighted ? 'highlightedBorder' : 'possibleMove border' : 'border'}\r\n    />;\r\n};","export const InbetweenDot = ({cellIndex, gameWidth}) => {\r\n    const borderWidth = 10 / (gameWidth + 1) + '%';\r\n\r\n    const dotStyle = {\r\n        paddingBottom: borderWidth,\r\n        width: borderWidth,\r\n    }\r\n\r\n    return <>\r\n        {cellIndex !== gameWidth - 1 &&\r\n        <td\r\n            style={dotStyle} className={'border'}/>}\r\n    </>;\r\n};","import './Game.css';\r\nimport {Fragment, useState} from \"react\";\r\nimport {useCreateNewGame} from \"../../hooks/useCreateNewGame\";\r\nimport {Area, HorizontalMove, InbetweenDot, Loader, VerticalMove} from \"..\";\r\n\r\nconst Game = () => {\r\n    const gameState = useCreateNewGame()\r\n    const [highlightedMove, setHighlightedMove] = useState()\r\n\r\n    if (!gameState) {\r\n        return <Loader/>\r\n    }\r\n\r\n    const gameWidth = gameState.areas[0].length;\r\n\r\n    return (\r\n        <div>\r\n            &nbsp;\r\n            <table>\r\n                <tbody>\r\n                {gameState.areas.map((row, rowIndex) => {\r\n                    return (\r\n                        <Fragment key={'row-' + rowIndex}>\r\n                            <tr>\r\n                                {row.map((cell, cellIndex) => {\r\n                                    return (\r\n                                        <Fragment key={'cell-' + rowIndex + \"-\" + cellIndex}>\r\n                                            <Area gameWidth={gameWidth} color={cell} areaY={rowIndex} areaX={cellIndex}\r\n                                                  setHighlightedMove={setHighlightedMove}/>\r\n                                            <VerticalMove cellIndex={cellIndex} gameWidth={gameWidth}\r\n                                                          rowIndex={rowIndex} possibleMoves={gameState.possibleMoves}\r\n                                                          highlightedMove={highlightedMove}/>\r\n                                        </Fragment>)\r\n                                })}\r\n                            </tr>\r\n                            {rowIndex !== gameState.areas.length - 1 && (\r\n                                <tr key={'bottom-borders-of-row-' + rowIndex}>\r\n                                    {row.map((cell, cellIndex) => {\r\n                                        return (<Fragment key={'bottom-border-of-cell-' + rowIndex + \"-\" + cellIndex}>\r\n                                                <HorizontalMove rowIndex={rowIndex} cellIndex={cellIndex}\r\n                                                                gameWidth={gameWidth} highlightedMove={highlightedMove}\r\n                                                                possibleMoves={gameState.possibleMoves}/>\r\n                                                <InbetweenDot cellIndex={cellIndex} gameWidth={gameWidth}/>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </tr>)}\r\n                        </Fragment>)\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import {useEffect, useState} from \"react\";\r\nimport {backendUrl} from \"../components/Game/configuration\";\r\n\r\nexport const useCreateNewGame = () => {\r\n    const [gameState, setGame] = useState()\r\n\r\n    useEffect(() => {\r\n        fetch(backendUrl + \"create-new-game\", {\r\n            method: 'POST', body: \"{}\", headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => setGame(data));\r\n    }, [])\r\n\r\n    return gameState;\r\n}","import Game from \"./components/Game/Game\";\n\nconst App = () => <Game/>;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}