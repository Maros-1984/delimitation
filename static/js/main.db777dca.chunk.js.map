{"version":3,"sources":["components/Game/configuration.js","hooks/useWindowDimensions.js","components/Area/Area.js","components/Loader/Loader.js","components/VerticalMove/VerticalMove.js","components/HorizontalMove/HorizontalMove.js","components/InbetweenDot/InbetweenDot.js","components/Game/Game.js","hooks/useCreateNewGame.js","hooks/useMakeMove.js","hooks/useWaitingForAnotherPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["backendUrl","getWindowDimensions","window","width","innerWidth","height","innerHeight","Area","gameWidth","color","areaX","areaY","setHighlightedMove","areaWidth","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","areaStyle","paddingBottom","onMouseMove","e","x","nativeEvent","offsetX","y","offsetY","bottom","right","className","toLowerCase","style","Loader","VerticalMove","cellIndex","rowIndex","game","highlightedMove","verticalBorderStyle","isHighlighted","madeMoveColor","moves","find","pm","possibleMoves","isPossibleRightMove","HorizontalMove","horizontalBorderStyle","console","log","isPossibleBottomMove","InbetweenDot","borderWidth","dotStyle","Game","moveToMake","setMoveToMake","setGame","gameId","document","location","hash","substring","lastPlayerColor","sessionStorage","getItem","length","fetch","method","body","JSON","stringify","playerAsking","headers","then","response","json","data","setItem","yourPlayerColor","useCreateNewGame","move","player","playerOnMove","useMakeMove","setTimeout","incremental","useWaitingForAnotherPlayer","areas","onClick","map","row","cell","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db777dca.chunk.js","sourcesContent":["export const backendUrl = 'https://delimitation.ey.r.appspot.com/';","import {useEffect, useState} from 'react';\r\n\r\nconst getWindowDimensions = () => {\r\n    const {innerWidth: width, innerHeight: height} = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n};\r\n\r\nexport const useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import {useWindowDimensions} from \"../../hooks/useWindowDimensions\";\r\n\r\nexport const Area = ({gameWidth, color, areaX, areaY, setHighlightedMove}) => {\r\n    const {width} = useWindowDimensions()\r\n    const areaWidth = .9 / gameWidth * width;\r\n\r\n    const areaStyle = {\r\n        paddingBottom: areaWidth + \"px\",\r\n        width: areaWidth + \"px\",\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        let x = e.nativeEvent.offsetX;\r\n        let y = e.nativeEvent.offsetY;\r\n\r\n        if (x > y) {\r\n            if (areaWidth - x > y) {\r\n                // Highlight upper border.\r\n                setHighlightedMove({areaX, areaY: areaY - 1, bottom: true})\r\n            } else {\r\n                // Highlight right border.\r\n                setHighlightedMove({areaX, areaY, right: true})\r\n            }\r\n        } else {\r\n            if (areaWidth - x > y) {\r\n                // Highlight left border.\r\n                setHighlightedMove({areaX: areaX - 1, areaY, right: true})\r\n            } else {\r\n                // Highlight bottom border.\r\n                setHighlightedMove({areaX, areaY, bottom: true})\r\n            }\r\n        }\r\n    };\r\n\r\n    return <td onMouseMove={handleMouseMove} className={color.toLowerCase() + \"Area\"} style={areaStyle}/>;\r\n};","import './Loader.css';\r\n\r\nexport const Loader = () => <div className=\"loader\"/>;","export const VerticalMove = ({cellIndex, gameWidth, rowIndex, game, highlightedMove}) => {\r\n    const areaWidth = 90 / gameWidth + '%';\r\n    const borderWidth = 10 / (gameWidth + 1) + '%';\r\n\r\n    const verticalBorderStyle = {\r\n        paddingBottom: areaWidth,\r\n        width: borderWidth,\r\n    }\r\n\r\n    const isPossibleRightMove = (rowIndex, cellIndex) => game.possibleMoves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.right);\r\n    const isHighlighted = highlightedMove?.areaX === cellIndex && highlightedMove?.areaY === rowIndex && highlightedMove?.right\r\n    const madeMoveColor = game.moves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.right)?.color?.toLowerCase();\r\n\r\n    return <>\r\n        {cellIndex !== gameWidth - 1 &&\r\n        <td style={verticalBorderStyle}\r\n            className={madeMoveColor ? madeMoveColor : isPossibleRightMove(rowIndex, cellIndex) ? isHighlighted ? 'highlightedBorder' : 'possibleMove border' : 'border'}/>}\r\n    </>;\r\n};","export const HorizontalMove = ({rowIndex, cellIndex, gameWidth, game, highlightedMove}) => {\r\n    const areaWidth = 90 / gameWidth + '%';\r\n    const borderWidth = 10 / (gameWidth + 1) + '%';\r\n\r\n    const horizontalBorderStyle = {\r\n        paddingBottom: borderWidth,\r\n        width: areaWidth,\r\n    }\r\n\r\n    const isPossibleBottomMove = (rowIndex, cellIndex) => game.possibleMoves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.bottom);\r\n    const isHighlighted = highlightedMove?.areaX === cellIndex && highlightedMove?.areaY === rowIndex && highlightedMove?.bottom\r\n    const madeMoveColor = game.moves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.bottom)?.color?.toLowerCase();\r\n    console.log(madeMoveColor, game.moves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.bottom))\r\n\r\n    return <td style={horizontalBorderStyle}\r\n               className={madeMoveColor ? madeMoveColor : isPossibleBottomMove(rowIndex, cellIndex) ? isHighlighted ? 'highlightedBorder' : 'possibleMove border' : 'border'}\r\n    />;\r\n};","export const InbetweenDot = ({cellIndex, gameWidth}) => {\r\n    const borderWidth = 10 / (gameWidth + 1) + '%';\r\n\r\n    const dotStyle = {\r\n        paddingBottom: borderWidth,\r\n        width: borderWidth,\r\n    }\r\n\r\n    return <>\r\n        {cellIndex !== gameWidth - 1 &&\r\n        <td\r\n            style={dotStyle} className={'border'}/>}\r\n    </>;\r\n};","import './Game.css';\r\nimport {Fragment, useState} from \"react\";\r\nimport {useCreateNewGame} from \"../../hooks/useCreateNewGame\";\r\nimport {Area, HorizontalMove, InbetweenDot, Loader, VerticalMove} from \"..\";\r\nimport {useMakeMove} from \"../../hooks/useMakeMove\";\r\nimport {useWaitingForAnotherPlayer} from \"../../hooks/useWaitingForAnotherPlayer\";\r\n\r\nconst Game = () => {\r\n    const [highlightedMove, setHighlightedMove] = useState()\r\n    const [moveToMake, setMoveToMake] = useState()\r\n    const {game, setGame} = useCreateNewGame()\r\n\r\n    useMakeMove(moveToMake, setMoveToMake, game, setGame);\r\n    useWaitingForAnotherPlayer(game, setGame)\r\n\r\n    if (!game) {\r\n        return <Loader/>\r\n    }\r\n\r\n    const gameWidth = game.areas[0].length;\r\n\r\n    const handleOnClick = () => {\r\n        if (game.possibleMoves.find(\r\n            pm => pm.areaX === highlightedMove?.areaX\r\n                && pm.areaY === highlightedMove?.areaY\r\n                && ((pm.right && highlightedMove?.right) || (pm.bottom && highlightedMove?.bottom)))) {\r\n            setMoveToMake(highlightedMove)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div onClick={handleOnClick}>\r\n            &nbsp;\r\n            <table>\r\n                <tbody>\r\n                {game.areas.map((row, rowIndex) => {\r\n                    return (\r\n                        <Fragment key={'row-' + rowIndex}>\r\n                            <tr>\r\n                                {row.map((cell, cellIndex) => {\r\n                                    return (\r\n                                        <Fragment key={'cell-' + rowIndex + \"-\" + cellIndex}>\r\n                                            <Area gameWidth={gameWidth} color={cell} areaY={rowIndex} areaX={cellIndex}\r\n                                                  setHighlightedMove={setHighlightedMove}/>\r\n                                            <VerticalMove cellIndex={cellIndex} gameWidth={gameWidth}\r\n                                                          rowIndex={rowIndex} game={game}\r\n                                                          highlightedMove={highlightedMove}/>\r\n                                        </Fragment>)\r\n                                })}\r\n                            </tr>\r\n                            {rowIndex !== game.areas.length - 1 && (\r\n                                <tr key={'bottom-borders-of-row-' + rowIndex}>\r\n                                    {row.map((cell, cellIndex) => {\r\n                                        return (<Fragment key={'bottom-border-of-cell-' + rowIndex + \"-\" + cellIndex}>\r\n                                                <HorizontalMove rowIndex={rowIndex} cellIndex={cellIndex}\r\n                                                                gameWidth={gameWidth} highlightedMove={highlightedMove}\r\n                                                                game={game}/>\r\n                                                <InbetweenDot cellIndex={cellIndex} gameWidth={gameWidth}/>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </tr>)}\r\n                        </Fragment>)\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import {useEffect, useState} from \"react\";\r\nimport {backendUrl} from \"../components/Game/configuration\";\r\n\r\nexport const useCreateNewGame = () => {\r\n    const [game, setGame] = useState()\r\n\r\n    useEffect(() => {\r\n        const gameId = document.location.hash?.substring(1)\r\n        let lastPlayerColor = sessionStorage.getItem('playerColor')\r\n        const lastGameId = sessionStorage.getItem('playerColor')\r\n        if (gameId !== lastGameId) {\r\n            lastPlayerColor = null\r\n        }\r\n\r\n        if (gameId?.length > 0) {\r\n            fetch(backendUrl + \"get-game-status\", {\r\n                method: 'POST', body: JSON.stringify({gameId, playerAsking: lastPlayerColor}), headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setGame(data);\r\n                    sessionStorage.setItem('playerColor', data.yourPlayerColor)\r\n                    sessionStorage.setItem('gameId', data.gameId)\r\n                });\r\n\r\n        } else {\r\n            fetch(backendUrl + \"create-new-game\", {\r\n                method: 'POST', body: \"{}\", headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setGame(data);\r\n                    document.location.hash = data.gameId;\r\n                    sessionStorage.setItem('playerColor', data.yourPlayerColor)\r\n                    sessionStorage.setItem('gameId', data.gameId)\r\n                });\r\n        }\r\n    }, [])\r\n\r\n    return {game, setGame};\r\n}","import {useEffect} from \"react\";\r\nimport {backendUrl} from \"../components/Game/configuration\";\r\n\r\nexport const useMakeMove = (moveToMake, setMoveToMake, game, setGame) => {\r\n    useEffect(() => {\r\n        if (!moveToMake) return\r\n\r\n        fetch(backendUrl + \"make-move\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                gameId: game.gameId,\r\n                move: moveToMake,\r\n                player: sessionStorage.getItem('playerColor')\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setMoveToMake(null)\r\n                setGame(data);\r\n            });\r\n    }, [game?.gameId, game?.playerOnMove, moveToMake, setGame, setMoveToMake])\r\n}","import {useEffect} from \"react\";\r\nimport {backendUrl} from \"../components/Game/configuration\";\r\n\r\nexport const useWaitingForAnotherPlayer = (game, setGame) => {\r\n    useEffect(() => {\r\n        if (!game || game.possibleMoves.length > 0) return\r\n\r\n        setTimeout(() =>\r\n            fetch(backendUrl + \"get-game-status\", {\r\n                method: 'POST', body: JSON.stringify({\r\n                    gameId: game.gameId,\r\n                    playerAsking: sessionStorage.getItem('playerColor'),\r\n                    incremental: true\r\n                }), headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => setGame(data)), 2000);\r\n    }, [game, setGame])\r\n}","import Game from \"./components/Game/Game\";\n\nconst App = () => <Game/>;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}