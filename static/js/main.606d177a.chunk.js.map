{"version":3,"sources":["constants.js","App.js","configuration.js","reportWebVitals.js","index.js"],"names":["AreaColor","App","useEffect","fetch","then","response","json","data","console","log","gameState","areas","possibleMoves","areaX","areaY","bottom","right","areaWidth","length","borderWidth","areaStyle","paddingBottom","width","verticalBorderStyle","horizontalBorderStyle","dotStyle","isPossibleRightMove","rowIndex","cellIndex","find","pm","isPossibleBottomMove","map","row","cell","style","backgroundColor","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.606d177a.chunk.js","sourcesContent":["export const AreaColor =\r\n    {\r\n        EMPTY: 'EMPTY',\r\n        RED: 'RED',\r\n        BLUE: 'BLUE'\r\n    }","import './App.css';\nimport {Fragment, useEffect} from \"react\";\nimport {backendUrl} from \"./configuration\";\nimport {AreaColor} from \"./constants\";\n\nconst App = () => {\n    useEffect(() => {\n        fetch(backendUrl)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    }, [])\n\n    const gameState = {\n        areas: [\n            [AreaColor.EMPTY, AreaColor.RED, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.BLUE, AreaColor.BLUE, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n            [AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY, AreaColor.EMPTY],\n        ],\n        possibleMoves: [\n            {\n                areaX: 0,\n                areaY: 0,\n                bottom: true\n            },\n            {\n                areaX: 0,\n                areaY: 0,\n                right: true\n            },\n        ]\n\n    }\n\n    const areaWidth = 90 / (gameState.areas[0].length) + '%';\n    const borderWidth = 10 / (gameState.areas[0].length + 1) + '%';\n    const areaStyle = {\n        paddingBottom: areaWidth,\n        width: areaWidth,\n    };\n    const verticalBorderStyle = {\n        paddingBottom: areaWidth,\n        width: borderWidth,\n    }\n    const horizontalBorderStyle = {\n        paddingBottom: borderWidth,\n        width: areaWidth,\n    }\n    const dotStyle = {\n        paddingBottom: borderWidth,\n        width: borderWidth,\n    }\n\n    const isPossibleRightMove = (rowIndex, cellIndex) => gameState.possibleMoves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.right);\n    const isPossibleBottomMove = (rowIndex, cellIndex) => gameState.possibleMoves.find(pm => pm.areaX === cellIndex && pm.areaY === rowIndex && pm.bottom);\n\n    return (\n        <div>\n            &nbsp;\n            <table>\n                <tbody>\n                {gameState.areas.map((row, rowIndex) => {\n                    return (\n                        <Fragment>\n                            <tr key={'row-' + rowIndex}>\n                                {row.map((cell, cellIndex) => {\n                                    return (<Fragment>\n                                            <td key={'cell-' + rowIndex + \"-\" + cellIndex} style={{\n                                                ...areaStyle,\n                                                backgroundColor: cell === AreaColor.RED ? 'red' : cell === AreaColor.BLUE ? 'blue' : 'white'\n                                            }}/>\n                                            {cellIndex !== gameState.areas[0].length - 1 &&\n                                            <td key={'right-border-of-cell-' + rowIndex + \"-\" + cellIndex}\n                                                style={verticalBorderStyle}\n                                                className={isPossibleRightMove(rowIndex, cellIndex) ? 'possibleMove border' : 'border'}/>}\n                                        </Fragment>\n                                    )\n                                })\n                                }\n                            </tr>\n                            {rowIndex !== gameState.areas.length - 1 && (\n                                <tr key={'bottom-borders-of-row-' + rowIndex}>\n                                    {row.map((cell, cellIndex) => {\n                                        return (<Fragment>\n                                                <td key={'bottom-border-of-cell-' + rowIndex + \"-\" + cellIndex}\n                                                    style={horizontalBorderStyle}\n                                                    className={isPossibleBottomMove(rowIndex, cellIndex) ? 'possibleMove border' : 'border'}\n                                                />\n                                                {cellIndex !== gameState.areas[0].length - 1 &&\n                                                <td key={'dot-between-borders-' + rowIndex + \"-\" + cellIndex}\n                                                    style={dotStyle} className={'border'}/>}\n                                            </Fragment>\n                                        )\n                                    })\n                                    }\n                                </tr>)}\n                        </Fragment>)\n                })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default App;\n","export const backendUrl = 'https://delimitation.ey.r.appspot.com/';","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}